# Для каждой строки матрицы с нечетным номером найти среднее арифметическое ее
# элементов.

def avg_of_odd_rows(matrix):
    odd_row_avgs = []
    for i, row in enumerate(matrix):
        if i % 2 == 1: # проверяем, не является ли номер строки нечетным
            avg = sum(row) / len(row)
            odd_row_avgs.append(avg)
    return odd_row_avgs

matrix = [[1, 76, 3], [4, 13, 43], [1, 8, 9]]
print(avg_of_odd_rows(matrix))


#Этот код создает матрицу с размером n * m (размер матрицы задается в переменных n и m).
# Затем, используя цикл for, он итерируется по каждой строке матрицы, проверяя,
# является ли номер строки нечетным. Если номер строки нечетен,
# то среднее арифметическое ее элементов вычисляется как сумма всех элементов деленная на их количество,
# и результат выводится на экран. В конечном итоге, этот код позволяет найти среднее арифметическое
# для каждой строки матрицы с нечетным номером.